name: Unity Tests ðŸ§ª

on: workflow_dispatch

permissions:
  contents: read
  checks: write
  pull-requests: write

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

jobs:
  testRunner:
    name: Test in ${{ matrix.testMode }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        testMode: [EditMode, PlayMode]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v4.2.1
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v4.2.1
        with:
          path: Library
          key: Library-test-${{ matrix.testMode }}-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-test-${{ matrix.testMode }}-
            Library-

      - name: Run Unity Test Runner ðŸ§ª
        uses: game-ci/unity-test-runner@v4.3.1
        id: testRunner
        with:
          testMode: ${{ matrix.testMode }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: Unity Tests (${{ matrix.testMode }})

      - name: Upload Test Results ðŸ“¤
        uses: actions/upload-artifact@v4.6.0
        with:
          name: Test Results - ${{ matrix.testMode }}
          path: ${{ steps.testRunner.outputs.artifactsPath }}
